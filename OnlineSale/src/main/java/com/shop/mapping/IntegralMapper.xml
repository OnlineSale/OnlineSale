<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shop.dao.IntegralMapper" >
  <resultMap id="BaseResultMap" type="com.shop.model.Integral" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="balance_integral" property="balanceIntegral" jdbcType="INTEGER"/>
    <result column="accumulated_integral" property="accumulatedIntegral" jdbcType="INTEGER" />
    <result column="ranking_integral" property="rankingIntegral" jdbcType="INTEGER" />
    <result column="share_integral" property="shareIntegral" jdbcType="INTEGER" />
    <result column="withdraw_integral" property="withdrawIntegral" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Base_Column_List">
  	id, user_id, balance_integral, accumulated_integral, ranking_integral, share_integral, withdraw_integral
  </sql>
  
  <insert id="save" parameterType="com.shop.model.Integral" >
  	insert into integral (id, user_id, balance_integral, accumulated_integral, ranking_integral, share_integral, withdraw_integral) 
  	values(#{id, jdbcType=INTEGER}, #{userId, jdbcType=INTEGER}, #{balanceIntegral, jdbcType=INTEGER}, 
  		#{accumulatedIntegral, jdbcType=INTEGER}, #{rankingIntegral, jdbcType=INTEGER}, #{shareIntegral, jdbcType=INTEGER},
  		#{withdrawIntegral, jdbcType=INTEGER})
  </insert>
  
  <select id="findByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  	select 
    <include refid="Base_Column_List" />
    from integral
    where user_id = #{userid,jdbcType=INTEGER}
  </select>
  
  <update id="update" parameterType="com.shop.model.Integral">
  	update integral
  	<set>
  		<if test="userId != null">
  			user_id = #{userId,jdbcType=INTEGER},
  		</if>
  		<if test="balanceIntegral != null">
  			balance_integral = #{balanceIntegral,jdbcType=INTEGER},
  		</if>
  		<if test="accumulatedIntegral != null">
  			accumulated_integral = #{accumulatedIntegral,jdbcType=INTEGER},
  		</if>
  		<if test="rankingIntegral != null">
  			ranking_integral = #{rankingIntegral,jdbcType=INTEGER},
  		</if>
  		<if test="shareIntegral != null">
  			share_integral = #{shareIntegral,jdbcType=INTEGER},
  		</if>
  		<if test="withdrawIntegral != null">
  			withdraw_integral = #{withdrawIntegral,jdbcType=INTEGER}
  		</if>
  	</set>
  	where id = #{id, jdbcType=INTEGER}
  </update>
  
</mapper>