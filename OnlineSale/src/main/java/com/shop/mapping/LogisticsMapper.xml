<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shop.dao.LogisticsMapper" >
  <resultMap id="BaseResultMap" type="com.shop.model.Logistics" >
    <id column="logisticsId" property="logisticsid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="orderId" property="orderid" jdbcType="INTEGER" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="receiver" property="receiver" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="INTEGER" />
    <result column="fixPhone" property="fixphone" jdbcType="VARCHAR" />
    <result column="postcode" property="postcode" jdbcType="INTEGER" />
    <result column="logisticsCom" property="logisticscom" jdbcType="VARCHAR" />
    <result column="logisticsNumber" property="logisticsnumber" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    logisticsId, userId, orderId, address, receiver, phone, fixPhone, postcode, logisticsCom, 
    logisticsNumber
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from logistics
    where logisticsId = #{logisticsid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from logistics
    where logisticsId = #{logisticsid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.shop.model.Logistics" >
    insert into logistics (logisticsId, userId, orderId, 
      address, receiver, phone, 
      fixPhone, postcode, logisticsCom, 
      logisticsNumber)
    values (#{logisticsid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{orderid,jdbcType=INTEGER}, 
      #{address,jdbcType=VARCHAR}, #{receiver,jdbcType=VARCHAR}, #{phone,jdbcType=INTEGER}, 
      #{fixphone,jdbcType=VARCHAR}, #{postcode,jdbcType=INTEGER}, #{logisticscom,jdbcType=VARCHAR}, 
      #{logisticsnumber,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.shop.model.Logistics" >
    insert into logistics
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logisticsid != null" >
        logisticsId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="orderid != null" >
        orderId,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="receiver != null" >
        receiver,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="fixphone != null" >
        fixPhone,
      </if>
      <if test="postcode != null" >
        postcode,
      </if>
      <if test="logisticscom != null" >
        logisticsCom,
      </if>
      <if test="logisticsnumber != null" >
        logisticsNumber,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logisticsid != null" >
        #{logisticsid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="orderid != null" >
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null" >
        #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=INTEGER},
      </if>
      <if test="fixphone != null" >
        #{fixphone,jdbcType=VARCHAR},
      </if>
      <if test="postcode != null" >
        #{postcode,jdbcType=INTEGER},
      </if>
      <if test="logisticscom != null" >
        #{logisticscom,jdbcType=VARCHAR},
      </if>
      <if test="logisticsnumber != null" >
        #{logisticsnumber,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shop.model.Logistics" >
    update logistics
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="orderid != null" >
        orderId = #{orderid,jdbcType=INTEGER},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null" >
        receiver = #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=INTEGER},
      </if>
      <if test="fixphone != null" >
        fixPhone = #{fixphone,jdbcType=VARCHAR},
      </if>
      <if test="postcode != null" >
        postcode = #{postcode,jdbcType=INTEGER},
      </if>
      <if test="logisticscom != null" >
        logisticsCom = #{logisticscom,jdbcType=VARCHAR},
      </if>
      <if test="logisticsnumber != null" >
        logisticsNumber = #{logisticsnumber,jdbcType=VARCHAR},
      </if>
    </set>
    where logisticsId = #{logisticsid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shop.model.Logistics" >
    update logistics
    set userId = #{userid,jdbcType=INTEGER},
      orderId = #{orderid,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      receiver = #{receiver,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=INTEGER},
      fixPhone = #{fixphone,jdbcType=VARCHAR},
      postcode = #{postcode,jdbcType=INTEGER},
      logisticsCom = #{logisticscom,jdbcType=VARCHAR},
      logisticsNumber = #{logisticsnumber,jdbcType=VARCHAR}
    where logisticsId = #{logisticsid,jdbcType=INTEGER}
  </update>
</mapper>