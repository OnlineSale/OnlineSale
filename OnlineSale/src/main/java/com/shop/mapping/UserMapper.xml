<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shop.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.shop.model.User" >
    <id column="userId" property="userid" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="payPassword" property="paypassword" jdbcType="INTEGER" />
    <result column="registTime" property="registtime" jdbcType="VARCHAR" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="INTEGER" />
    <result column="integralId" property="integralid" jdbcType="INTEGER" />
    <result column="memberLevel" property="memberlevel" jdbcType="INTEGER" />
    <result column="userImage" property="userimage" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    userId, username, password, payPassword, registTime, idcard, phone, integralId, memberLevel, 
    userImage
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where userId = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where userId = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.shop.model.User" >
    insert into user (userId, username, password, 
      payPassword, registTime, idcard, 
      phone, integralId, memberLevel, 
      userImage)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{paypassword,jdbcType=INTEGER}, #{registtime,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, 
      #{phone,jdbcType=INTEGER}, #{integralid,jdbcType=INTEGER}, #{memberlevel,jdbcType=INTEGER}, 
      #{userimage,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.shop.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userId,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="paypassword != null" >
        payPassword,
      </if>
      <if test="registtime != null" >
        registTime,
      </if>
      <if test="idcard != null" >
        idcard,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="integralid != null" >
        integralId,
      </if>
      <if test="memberlevel != null" >
        memberLevel,
      </if>
      <if test="userimage != null" >
        userImage,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="paypassword != null" >
        #{paypassword,jdbcType=INTEGER},
      </if>
      <if test="registtime != null" >
        #{registtime,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=INTEGER},
      </if>
      <if test="integralid != null" >
        #{integralid,jdbcType=INTEGER},
      </if>
      <if test="memberlevel != null" >
        #{memberlevel,jdbcType=INTEGER},
      </if>
      <if test="userimage != null" >
        #{userimage,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shop.model.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="paypassword != null" >
        payPassword = #{paypassword,jdbcType=INTEGER},
      </if>
      <if test="registtime != null" >
        registTime = #{registtime,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=INTEGER},
      </if>
      <if test="integralid != null" >
        integralId = #{integralid,jdbcType=INTEGER},
      </if>
      <if test="memberlevel != null" >
        memberLevel = #{memberlevel,jdbcType=INTEGER},
      </if>
      <if test="userimage != null" >
        userImage = #{userimage,jdbcType=VARCHAR},
      </if>
    </set>
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shop.model.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      payPassword = #{paypassword,jdbcType=INTEGER},
      registTime = #{registtime,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=INTEGER},
      integralId = #{integralid,jdbcType=INTEGER},
      memberLevel = #{memberlevel,jdbcType=INTEGER},
      userImage = #{userimage,jdbcType=VARCHAR}
    where userId = #{userid,jdbcType=INTEGER}
  </update>
</mapper>