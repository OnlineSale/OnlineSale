<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shop.dao.ShoppingMapper" >
  <resultMap id="BaseResultMap" type="com.shop.model.Shopping" >
    <id column="shoppingId" property="shoppingid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="goodId" property="goodid" jdbcType="INTEGER" />
    <result column="goodNumber" property="goodnumber" jdbcType="INTEGER" />
    <result column="shopTime" property="shoptime" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap id="ShoppingGoodResultMap" type="com.shop.bean.ShoppingBean">
    <id column="shoppingId" property="shoppingid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="goodId" property="goodid" jdbcType="INTEGER" />
    <result column="goodNumber" property="goodnumber" jdbcType="INTEGER" />
    <result column="shopTime" property="shoptime" jdbcType="VARCHAR" />
    <result column="goodName" property="goodname" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="goodImage" property="goodimage" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    shoppingId, userId, goodId, goodNumber, shopTime
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from shopping
    where shoppingId = #{shoppingid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from shopping
    where shoppingId = #{shoppingid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.shop.model.Shopping" >
    insert into shopping (shoppingId, userId, goodId, 
      goodNumber, shopTime)
    values (#{shoppingid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{goodid,jdbcType=INTEGER}, 
      #{goodnumber,jdbcType=INTEGER}, #{shoptime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.shop.model.Shopping" >
    insert into shopping
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="shoppingid != null" >
        shoppingId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="goodid != null" >
        goodId,
      </if>
      <if test="goodnumber != null" >
        goodNumber,
      </if>
      <if test="shoptime != null" >
        shopTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="shoppingid != null" >
        #{shoppingid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="goodid != null" >
        #{goodid,jdbcType=INTEGER},
      </if>
      <if test="goodnumber != null" >
        #{goodnumber,jdbcType=INTEGER},
      </if>
      <if test="shoptime != null" >
        #{shoptime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shop.model.Shopping" >
    update shopping
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="goodid != null" >
        goodId = #{goodid,jdbcType=INTEGER},
      </if>
      <if test="goodnumber != null" >
        goodNumber = #{goodnumber,jdbcType=INTEGER},
      </if>
      <if test="shoptime != null" >
        shopTime = #{shoptime,jdbcType=VARCHAR},
      </if>
    </set>
    where shoppingId = #{shoppingid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shop.model.Shopping" >
    update shopping
    set userId = #{userid,jdbcType=INTEGER},
      goodId = #{goodid,jdbcType=INTEGER},
      goodNumber = #{goodnumber,jdbcType=INTEGER},
      shopTime = #{shoptime,jdbcType=VARCHAR}
    where shoppingId = #{shoppingid,jdbcType=INTEGER}
  </update>

  <select id="findShoppingByUserIdAndGoodId"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from shopping
    where userId =#{userid,jdbcType=INTEGER} AND goodId =#{goodid,jdbcType=INTEGER}
  </select>

  <!--<select id="findShoppingByUserId" resultMap="BaseResultMap"  >-->
    <!--select-->
    <!--<include refid="Base_Column_List" />-->
    <!--from shopping-->
    <!--where userId = #{userid}-->
  <!--</select>-->
  <select id="findShoppingByUserId" resultMap="ShoppingGoodResultMap"  >
    select shoppingId,userId,goodId,goodNumber,shopTime,goodName,price,goodImage
     from (
     (select  shoppingId,userId,goodId as gid,goodNumber,shopTime from shopping)as s
     inner join
     (select goodId,goodName,price,goodImage from good)as g
    on s.gid = g.goodId
     )
    where userId=#{userid}
  </select>

</mapper>