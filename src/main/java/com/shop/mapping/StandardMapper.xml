<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shop.dao.StandardMapper" >
  <resultMap id="BaseResultMap" type="com.shop.model.Standard" >
    <id column="standardId" property="standardid" jdbcType="INTEGER" />
    <result column="specificationId" property="specificationid" jdbcType="INTEGER" />
    <result column="standardName" property="standardname" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="stoke" property="stoke" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    standardId, specificationId, standardName, price, stoke
  </sql>
  <!-- 补充 -->
  <select id="selectBySpecificationId"  resultMap="BaseResultMap">
  select * 
  from standard
  where specificationId=#{specificatinId}
  </select>
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from standard
    where standardId = #{standardid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from standard
    where standardId = #{standardid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.shop.model.Standard" >
    insert into standard (standardId, specificationId, standardName, 
      price, stoke)
    values (#{standardid,jdbcType=INTEGER}, #{specificationid,jdbcType=INTEGER}, #{standardname,jdbcType=VARCHAR}, 
      #{price,jdbcType=DOUBLE}, #{stoke,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.shop.model.Standard" >
    insert into standard
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="standardid != null" >
        standardId,
      </if>
      <if test="specificationid != null" >
        specificationId,
      </if>
      <if test="standardname != null" >
        standardName,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="stoke != null" >
        stoke,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="standardid != null" >
        #{standardid,jdbcType=INTEGER},
      </if>
      <if test="specificationid != null" >
        #{specificationid,jdbcType=INTEGER},
      </if>
      <if test="standardname != null" >
        #{standardname,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="stoke != null" >
        #{stoke,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shop.model.Standard" >
    update standard
    <set >
      <if test="specificationid != null" >
        specificationId = #{specificationid,jdbcType=INTEGER},
      </if>
      <if test="standardname != null" >
        standardName = #{standardname,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="stoke != null" >
        stoke = #{stoke,jdbcType=INTEGER},
      </if>
    </set>
    where standardId = #{standardid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shop.model.Standard" >
    update standard
    set specificationId = #{specificationid,jdbcType=INTEGER},
      standardName = #{standardname,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      stoke = #{stoke,jdbcType=INTEGER}
    where standardId = #{standardid,jdbcType=INTEGER}
  </update>
</mapper>