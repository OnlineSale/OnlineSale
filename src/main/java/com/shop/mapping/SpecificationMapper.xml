<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shop.dao.SpecificationMapper" >
  <resultMap id="BaseResultMap" type="com.shop.model.Specification" >
    <id column="specificationId" property="specificationid" jdbcType="INTEGER" />
    <result column="goodId" property="goodid" jdbcType="INTEGER" />
    <result column="specificationName" property="specificationname" jdbcType="VARCHAR" />
    <result column="specificationImage" property="specificationimage" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="stoke" property="stoke" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    specificationId, goodId, specificationName, specificationImage, price, stoke
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from specification
    where specificationId = #{specificationid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from specification
    where specificationId = #{specificationid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.shop.model.Specification" >
    insert into specification (specificationId, goodId, specificationName, 
      specificationImage, price, stoke
      )
    values (#{specificationid,jdbcType=INTEGER}, #{goodid,jdbcType=INTEGER}, #{specificationname,jdbcType=VARCHAR}, 
      #{specificationimage,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, #{stoke,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.shop.model.Specification" >
    insert into specification
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="specificationid != null" >
        specificationId,
      </if>
      <if test="goodid != null" >
        goodId,
      </if>
      <if test="specificationname != null" >
        specificationName,
      </if>
      <if test="specificationimage != null" >
        specificationImage,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="stoke != null" >
        stoke,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="specificationid != null" >
        #{specificationid,jdbcType=INTEGER},
      </if>
      <if test="goodid != null" >
        #{goodid,jdbcType=INTEGER},
      </if>
      <if test="specificationname != null" >
        #{specificationname,jdbcType=VARCHAR},
      </if>
      <if test="specificationimage != null" >
        #{specificationimage,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="stoke != null" >
        #{stoke,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shop.model.Specification" >
    update specification
    <set >
      <if test="goodid != null" >
        goodId = #{goodid,jdbcType=INTEGER},
      </if>
      <if test="specificationname != null" >
        specificationName = #{specificationname,jdbcType=VARCHAR},
      </if>
      <if test="specificationimage != null" >
        specificationImage = #{specificationimage,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="stoke != null" >
        stoke = #{stoke,jdbcType=INTEGER},
      </if>
    </set>
    where specificationId = #{specificationid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shop.model.Specification" >
    update specification
    set goodId = #{goodid,jdbcType=INTEGER},
      specificationName = #{specificationname,jdbcType=VARCHAR},
      specificationImage = #{specificationimage,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      stoke = #{stoke,jdbcType=INTEGER}
    where specificationId = #{specificationid,jdbcType=INTEGER}
  </update>
</mapper>